<launch>

  <!-- GDB functionality -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <!-- Load example URDF -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find bioloid_typea_description)/typea.xacro'" />

  <group ns="typea">

    <!-- Load hardware interface -->
    <node name="bioloid_hardware_interface" pkg="ros_control_boilerplate" type="bioloid_hw_main"
          output="screen" launch-prefix="$(arg launch_prefix)"/>

    <!-- Load controller settings -->
    <rosparam file="$(find ros_control_boilerplate)/bioloid_control/config/bioloid_controllers.yaml" command="load"/>

    <!-- Load controller manager -->
    <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
	output="screen" args="spawn joint_state_controller 
	l_shoulder_swing_joint_position_controller
    l_shoulder_lateral_joint_position_controller
    l_elbow_joint_position_controller
    r_shoulder_swing_joint_position_controller
    r_shoulder_lateral_joint_position_controller
    r_elbow_joint_position_controller
    l_hip_twist_joint_position_controller
    l_hip_lateral_joint_position_controller
    l_hip_swing_joint_position_controller
    l_knee_joint_position_controller
    l_ankle_swing_joint_position_controller
    l_ankle_lateral_joint_position_controller
    r_hip_twist_joint_position_controller
    r_hip_lateral_joint_position_controller
    r_hip_swing_joint_position_controller
    r_knee_joint_position_controller
    r_ankle_swing_joint_position_controller
    r_ankle_lateral_joint_position_controller "/>
    <!-- Convert joint states to /tf tranforms -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  </group>

</launch>
